/*------------------------------------*\
    #INPUT BORDER ANIMATION
\*------------------------------------*/

/**
 * Border animation appears in both
 * checkbox button and radio button with icon
 */

.c-input--border {
  position: relative;

  width: 100%;
  margin-bottom: 20px;

  cursor: pointer;
  text-align: center;

  .c-input__container {
    width: 100%;

    border: 1px solid $color-grey-20;
    border-radius: $border-radius;
    background-color: $color-grey;
  }
  .c-icon__tick {
    position: absolute;
    z-index: 2;

    display: flex;

    width: $radio-button-size;
    height: $radio-button-size;

    cursor: pointer;
    transform: scale3d(0, 0, 0);

    border-radius: 50%;
    background-color: $color-brand-gold;

    justify-content: center;
    align-items: center;
    @include media-breakpoint-down(sm) {
      right: 0;
      bottom: -#{$radio-button-half-size};
      left: 0;

      margin: auto;
    }
    @include media-breakpoint-up(md) {
      right: -#{$radio-button-half-size};
    }

    svg {
      width: 100%;
    }
  }

  // Checked state
  input[type='checkbox'],
  input[type='radio'] {
    position: absolute;
    z-index: -1;
    top: 50%;
    left: 0;
    &:focus + .c-input__container {
      border: 1px solid $color-brand-gold;
    }
    &:checked + .c-input__container {
      border: 1px solid $color-grey-20;

      @extend %tickAnimationDelayed;

      .c-border-svg__shape {
        stroke-dashoffset: 0;
        stroke: $color-brand-gold;
      }
      .c-icon__tick {
        animation-delay: $anim-speed-quick;

        animation-fill-mode: forwards;
        @extend %bounceIn;
      }
    }
  }
}
.c-border-svg {
  position: absolute;
  z-index: 1;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  // To change the start position of
  // the border animation we flip the
  // SVG element horizontally

  transform: scale(-1, 1);
  pointer-events: none;

  border-radius: $border-radius;

  .c-border-svg__shape {
    width: 100%;

    transition: stroke-dasharray $anim-speed-quick $anim-linear,
      stroke-dashoffset $anim-speed-quick $anim-linear;

    stroke-dasharray: inherit;
    stroke-dashoffset: inherit;
  }
}
